---
- name: Assert platform is supported
  tags: tomcat
  assert:
    that:
      - ansible_os_family in tomcat_supported_platforms
      - ansible_distribution in tomcat_supported_distributions


- name: Load version vars
  tags: tomcat
  with_first_found:
    - ../vars/versions/{{ tomcat_version }}.yml
    - ../vars/versions/default.yml
  include_vars: "{{ item }}"

- name: Assert version vars
  tags: tomcat
  assert:
    that:
      - tomcat_sha1sum not in (None, "")

- name: Include util get/put instructions
  tags: tomcat
  include: util.yml

- name: Install catalina home directory
  tags: tomcat
  file:
    state: directory
    dest: "{{ tomcat_env_catalina_home }}"
    owner: "{{ util_action_user }}"
    group: "{{ util_action_user }}" 
    mode: 0755

- name: Extract Tomcat installation files to catalina home
  tags: tomcat
  command: tar
      -xzf {{ util_persistent_data_path_remote }}/{{ tomcat_filename }}
      -C {{ tomcat_env_catalina_home }}
      --strip-components 1
  args:
    creates: "{{ tomcat_env_catalina_home }}/lib"

- name: Install instance directories
  tags: tomcat
  with_nested:
    - tomcat_instances
    - tomcat_instance_dirs
  file:
    state: directory
    dest: "{{ item.0.path|default(tomcat_default_instance_path) }}/{{ item.0.name }}/{{ item.1 }}"
    owner: "{{ item.0.user|default(tomcat_default_user_name) }}"
    group: "{{ item.0.group|default(tomcat_default_user_group) }}"
    mode: 0755

- name: Register static/unmanaged conf files
  tags: tomcat
  register: tomcat_registered_conf_files
  changed_when: false
  command: ls
      -1
      --ignore=web.xml
      --ignore=context.xml
      --ignore=server.xml
      {{ tomcat_env_catalina_home }}/conf
 
- name: Install static/unmanaged conf files
  tags: tomcat
  with_nested:
    - tomcat_instances
    - tomcat_registered_conf_files.stdout_lines
  command: install
      --owner {{ item.0.user|default(tomcat_default_user_name) }}
      --group {{ item.0.group|default(tomcat_default_user_group) }}
      --mode 0640
      {{ tomcat_env_catalina_home }}/conf/{{ item.1 }}
      {{ item.0.path|default(tomcat_default_instance_path) }}/{{ item.0.name }}/conf/{{ item.1 }}
  args:
    creates: "{{ item.0.path|default(tomcat_default_instance_path) }}/{{ item.0.name }}/conf/{{ item.1 }}"

- name: Install instance server.xml
  tags: tomcat
  with_items: tomcat_instances
  register: tomcat_registered_install_server_xml
  template:
    src: "{{ item.server_xml_template|default(tomcat_default_server_xml_template) }}"
    dest: "{{ item.path|default(tomcat_default_instance_path) }}/{{ item.name }}/conf/server.xml"
    owner: "{{ item.user|default(tomcat_default_user_name) }}"
    group: "{{ item.group|default(tomcat_default_user_group) }}"
    mode: 0640

- name: Install instance context.xml
  tags: tomcat
  with_items: tomcat_instances
  register: tomcat_registered_install_server_xml
  template:
    src: "{{ item.server_xml_template|default(tomcat_default_context_xml_template) }}"
    dest: "{{ item.path|default(tomcat_default_instance_path) }}/{{ item.name }}/conf/context.xml"
    owner: "{{ item.user|default(tomcat_default_user_name) }}"
    group: "{{ item.group|default(tomcat_default_user_group) }}"
    mode: 0640

- name: Install instance web.xml
  tags: tomcat
  with_items: tomcat_instances
  register: tomcat_registered_install_web_xml
  template:
    src: "{{ item.web_xml_template|default(tomcat_default_web_xml_template) }}"
    dest: "{{ item.path|default(tomcat_default_instance_path) }}/{{ item.name }}/conf/web.xml"
    owner: "{{ item.user|default(tomcat_default_user_name) }}"
    group: "{{ item.group|default(tomcat_default_user_group) }}"
    mode: 0640

# Manage system services
- name: Configure service management
  tags: tomcat
  include_vars: 
    file: "service/{{ ansible_local['util']['init']['system'] }}.yml"

#   systemd requires to use separate environment files per instance
- name: Install instance environment files
  tags: tomcat
  when: ansible_local.util.init.system == 'systemd'
  with_items: tomcat_instances
  register: tomcat_registered_install_instance_environment_files
  template:
    src: service_systemd_envfile.j2
    dest: "{{ item.path|default(tomcat_default_instance_path) }}/{{ item.name }}/.systemd.conf"
    owner: "{{ item.user|default(tomcat_default_user_name) }}"
    group: "{{ item.group|default(tomcat_default_user_group) }}"
    mode: 0644

#   install a service file for tomcat
#     systemd by default uses a templated service (one unit, many instances)
- name: Install tomcat services
  tags: tomcat
  become: true
  with_items: tomcat_instances
  register: tomcat_registered_install_tomcat_service
  template:
    src: "{{ item.service_template|default(tomcat_default_service_template) }}"
    dest: "{{ tomcat_service_dir }}/{{ item.service_file|default(tomcat_default_service_file) }}"
    owner: 0
    group: 0
    mode: "{{ tomcat_service_file_mode }}"

#   reload systemd if service file(s) have changed
#     suppress warnings from systemd
- name: Reload systemd
  tags: tomcat
  when: tomcat_registered_install_tomcat_service.changed and ansible_local.util.init.system == 'systemd'
  become: true
  failed_when: false
  changed_when: false
  command: systemctl daemon-reload

- name: Ensure tomcat service(s)
  tags: tomcat
  become: true
  with_items: tomcat_instances
  service:
    state: started
    enabled: true
    name: "{{ item.service_name|default(tomcat_default_service_name) }}"

- name: Install local tomcat facts
  tags: tomcat
  become: true
  register: tomcat_registered_install_local_tomcat_facts
  template:
    src: facts.j2
    dest: /etc/ansible/facts.d/tomcat.fact
    owner: 0
    group: 0
    mode: 0644

- name: Re-read local facts
  tags: tomcat
  when: tomcat_registered_install_local_tomcat_facts.changed
  setup:
    filter: ansible_local

- name: Install Java 1.7
  yum: name=java-1.7.0-openjdk state=present

- name: add group "tomcat"
  group: name=tomcat

- name: add user "tomcat"
  user: name=tomcat group=tomcat home=/usr/share/tomcat createhome=no
  become: True
  become_method: sudo

- name: Download Tomcat
  get_url: url=http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.61/bin/apache-tomcat-7.0.61.tar.gz dest=/opt/apache-tomcat-7.0.61.tar.gz

- name: Extract archive
  command: chdir=/usr/share /bin/tar xvf /opt/apache-tomcat-7.0.61.tar.gz -C /opt/ creates=/opt/apache-tomcat-7.0.61

- name: Symlink install directory
  file: src=/opt/apache-tomcat-7.0.61 path=/usr/share/tomcat state=link

- name: Change ownership of Tomcat installation
  file: path=/usr/share/tomcat/ owner=tomcat group=tomcat state=directory recurse=yes

- name: Configure Tomcat server
  template: src=server.xml dest=/usr/share/tomcat/conf/
  notify: restart tomcat

- name: Configure Tomcat users
  template: src=tomcat-users.xml dest=/usr/share/tomcat/conf/
  notify: restart tomcat

- name: Install Tomcat init script
  copy: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755

- name: Start Tomcat
  service: name=tomcat state=started enabled=yes

- name: deploy iptables rules
  template: src=iptables-save dest=/etc/sysconfig/iptables
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"
  notify: restart iptables

- name: insert firewalld rule for tomcat http port
  firewalld: port={{ http_port }}/tcp permanent=true state=enabled immediate=yes
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: insert firewalld rule for tomcat https port
  firewalld: port={{ https_port }}/tcp permanent=true state=enabled immediate=yes
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: wait for tomcat to start
  wait_for: port={{http_port}}
